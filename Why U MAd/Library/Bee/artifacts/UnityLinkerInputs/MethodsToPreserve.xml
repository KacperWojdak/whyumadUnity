<linker>
	<assembly fullname="Assembly-CSharp" ignoreIfMissing="1">
		<type fullname="LevelCompleteController">
			<method name="ExitToMenu"/>
			<method name="ExitToMenu"/>
			<method name="ExitToMenu"/>
			<method name="ExitToMenu"/>
			<method name="LoadNextLevel"/>
			<method name="LoadNextLevel"/>
			<method name="LoadNextLevel"/>
		</type>
		<type fullname="LevelSelectionController">
			<method name="LoadLevel"/>
			<method name="LoadLevel"/>
			<method name="LoadLevel"/>
			<method name="LoadLevel"/>
		</type>
		<type fullname="MainMenuController">
			<method name="CloseCredits"/>
			<method name="CloseLevels"/>
			<method name="CloseSettings"/>
			<method name="ExitGame"/>
			<method name="OpenCredits"/>
			<method name="OpenLevels"/>
			<method name="OpenSettings"/>
		</type>
		<type fullname="PauseMenu">
			<method name="ExitToMenu"/>
			<method name="ExitToMenu"/>
			<method name="ExitToMenu"/>
			<method name="ExitToMenu"/>
			<method name="ResumeGame"/>
			<method name="ResumeGame"/>
			<method name="ResumeGame"/>
			<method name="ResumeGame"/>
		</type>
	</assembly>
	<assembly fullname="Unity.RenderPipelines.Core.Runtime" ignoreIfMissing="1">
		<type fullname="UnityEngine.Rendering.UI.DebugUIHandlerButton">
			<method name="OnAction"/>
		</type>
		<type fullname="UnityEngine.Rendering.UI.DebugUIHandlerIntField">
			<method name="OnDecrement"/>
			<method name="OnDecrement"/>
			<method name="OnIncrement"/>
			<method name="OnIncrement"/>
		</type>
		<type fullname="UnityEngine.Rendering.UI.DebugUIHandlerObjectPopupField">
			<method name="OnDecrement"/>
			<method name="OnIncrement"/>
		</type>
		<type fullname="UnityEngine.Rendering.UI.DebugUIHandlerPanel">
			<method name="OnScrollbarClicked"/>
			<method name="OnScrollbarClicked"/>
			<method name="ResetDebugManager"/>
		</type>
		<type fullname="UnityEngine.Rendering.UI.DebugUIHandlerUIntField">
			<method name="OnDecrement"/>
			<method name="OnDecrement"/>
			<method name="OnIncrement"/>
			<method name="OnIncrement"/>
		</type>
	</assembly>
</linker>
